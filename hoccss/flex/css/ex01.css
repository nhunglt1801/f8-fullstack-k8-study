/* 
Kỹ thuật Flex - viết tắt Flexible Box Modul
- Là một kỹ thuật CSS
- Chia layout trang web linh hoạt, đáp ứng các giao diện khó
- Dễ dàng tùy biến trên các màn hình khác nhau (responsive)
- Flex có 2 phần: 
    - flex-container bao bên ngoài
    - flex-item là các phần tử ben trong
- Có 2 trục chính: 
    - main-axis: trục chính nằm ngang
    - cross-axis: trục chính nằm dọc vuông góc vs main-axis

1. Các thuộc tính trong nhom flex container
- display: flex | inline-flex --> Kích hoạt flex 
- flex-direction: tùy chỉnh hướng của trục chính
    + row
    + row-reverse
    + column
    + column-reverse
- justify-content: căn chỉnh các item theo hướng song song vs trục chính
    + flex-start
    + center
    + flex-end
    + space-between
    + space-around
    + space-evenly
    + start
    + end

 --> start vs flex-start khác nhau khi sử dụng flex-direction: row-reverse (https://csslayout.news/whats-the-difference-between-the-alignment-values-of-start-flex-start-and-self-start/)

 - flex-wrap: wrap các item nếubị tràn ra khỏi container
    + nowrap
    + wrap
    + wrap-reverse
- align-content: căn chỉnh các item theo hướng song song vs trục chính

- align-items: căn chỉnh các item theo chiều vuông góc vs trục chính
    + stretch: chiều cao item full theo chiều cao của container
    + flex-start
    + flex-end
    + center
    + baseline: căng theo đường baseline của item, và lấy baseline của dòng đầu tiên nếu phần tử có nhiều dòng

 - align-content: căn chỉnh cả hàng và cột
    + stretch
    + flex-start
    + center
    + flex-end
    + space-between
    + space-around
    + space-evenly
    + start
    + end

- gap: khoảng cách giữa các item
    + gap: x y --> x khoảng cach giữ các hàng, y là khoảng cách giữa các cột
    + row-gap: x --> x khoảng cách giữa các hàng
    + column-gap: y --> y khoảng cách giữa các cột

2. Các thuộc tính trong nhóm flex item
- flex-grow: number --> giãn phần tử theo tỉ lệ của phần dư khoảng cách của các item vs container

- flex-shrink: number --> co phần tử 
    + 1 --> mặc định
    + 0 --> không co

- flex-basis: thiết lập kích thước ban đầu của một item
    --> Linh hoạt thay đổi kích thước item dựa vào flex-direction
    + flex-basis sẽ bị chặn bởi min-width và max-width, min-height và max-height -> vì có độ ưu tiên thấp hơn min-width và max-width, min-height và max-height

- flex: grow shrink basis;

- align-self: căn chỉnh item cụ thể theo hướng vuông góc vs trục chính (Các giá trị giống align-items)

- order: sắp xếp các item trong 1 flex
 --> mặc đinh là 0, -1 -> đẩy lên đầu, 1 -> đẩy xuống cuối
    */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
.box {
  width: 400px;
  height: 400px;
  border: 1px solid red;
  margin: 30px auto;
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: stretch;
  /* flex-wrap: wrap; */
  /* align-content: space-evenly; */
  /* gap: 10px 20px; */
  /* row-gap: 10px;
  column-gap: 20px; */
  overflow: auto;
}
.item {
  padding: 15px;
  background: green;
  border: 1px solid #fff;
  color: #fff;
  min-width: 50px;
  flex: 1 0 auto;
  /* flex-basis: 40px; */
  /* max-width: 60px;
  flex-grow: 1; */
  /* flex-grow: 1; */
  /* flex-shrink: 0; */
}

/* .item:nth-child(2) {
  padding: 30px 15px;
} */
/* .item:nth-child(2) {
  flex-grow: 3;
} */
.item:nth-child(3) {
  /* align-self: center; */
  display: flex;
  align-items: center;
  justify-content: center;
  order: -1;
}
.item:nth-child(1) {
  order: 1;
}
